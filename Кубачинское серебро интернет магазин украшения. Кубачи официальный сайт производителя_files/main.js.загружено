var _____WB$wombat$assign$function_____ = function(name) {return (self._wb_wombat && self._wb_wombat.local_init && self._wb_wombat.local_init(name)) || self[name]; };
if (!self.__WB_pmw) { self.__WB_pmw = function(obj) { this.__WB_source = obj; return this; } }
{
  let window = _____WB$wombat$assign$function_____("window");
  let self = _____WB$wombat$assign$function_____("self");
  let document = _____WB$wombat$assign$function_____("document");
  let location = _____WB$wombat$assign$function_____("location");
  let top = _____WB$wombat$assign$function_____("top");
  let parent = _____WB$wombat$assign$function_____("parent");
  let frames = _____WB$wombat$assign$function_____("frames");
  let opener = _____WB$wombat$assign$function_____("opener");


(function (factory) {
    if (typeof define === 'function' && define.amd) {
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        factory(require('jquery'));
    } else {
        factory(jQuery);
    }
}(function ($) {

    var ua = navigator.userAgent,
        iPhone = /iphone/i.test(ua),
        chrome = /chrome/i.test(ua),
        android = /android/i.test(ua),
        caretTimeoutId;

    $.mask = {
        definitions: {
            '9': "[0-9]",
            'a': "[A-Za-z]",
            '*': "[A-Za-z0-9]"
        },
        autoclear: true,
        dataName: "rawMaskFn",
        placeholder: '_'
    };

    $.fn.extend({
        caret: function(begin, end) {
            var range;

            if (this.length === 0 || this.is(":hidden") || this.get(0) !== document.activeElement) {
                return;
            }

            if (typeof begin == 'number') {
                end = (typeof end === 'number') ? end : begin;
                return this.each(function() {
                    if (this.setSelectionRange) {
                        this.setSelectionRange(begin, end);
                    } else if (this.createTextRange) {
                        range = this.createTextRange();
                        range.collapse(true);
                        range.moveEnd('character', end);
                        range.moveStart('character', begin);
                        range.select();
                    }
                });
            } else {
                if (this[0].setSelectionRange) {
                    begin = this[0].selectionStart;
                    end = this[0].selectionEnd;
                } else if (document.selection && document.selection.createRange) {
                    range = document.selection.createRange();
                    begin = 0 - range.duplicate().moveStart('character', -100000);
                    end = begin + range.text.length;
                }
                return { begin: begin, end: end };
            }
        },
        unmask: function() {
            return this.trigger("unmask");
        },
        mask: function(mask, settings) {
            var input,
                defs,
                tests,
                partialPosition,
                firstNonMaskPos,
                lastRequiredNonMaskPos,
                len,
                oldVal;

            if (!mask && this.length > 0) {
                input = $(this[0]);
                var fn = input.data($.mask.dataName)
                return fn?fn():undefined;
            }

            settings = $.extend({
                autoclear: $.mask.autoclear,
                placeholder: $.mask.placeholder,
                completed: null
            }, settings);


            defs = $.mask.definitions;
            tests = [];
            partialPosition = len = mask.length;
            firstNonMaskPos = null;

            mask = String(mask);

            $.each(mask.split(""), function(i, c) {
                if (c == '?') {
                    len--;
                    partialPosition = i;
                } else if (defs[c]) {
                    tests.push(new RegExp(defs[c]));
                    if (firstNonMaskPos === null) {
                        firstNonMaskPos = tests.length - 1;
                    }
                    if(i < partialPosition){
                        lastRequiredNonMaskPos = tests.length - 1;
                    }
                } else {
                    tests.push(null);
                }
            });

            return this.trigger("unmask").each(function() {
                var input = $(this),
                    buffer = $.map(
                        mask.split(""),
                        function(c, i) {
                            if (c != '?') {
                                return defs[c] ? getPlaceholder(i) : c;
                            }
                        }),
                    defaultBuffer = buffer.join(''),
                    focusText = input.val();

                function tryFireCompleted(){
                    if (!settings.completed) {
                        return;
                    }

                    for (var i = firstNonMaskPos; i <= lastRequiredNonMaskPos; i++) {
                        if (tests[i] && buffer[i] === getPlaceholder(i)) {
                            return;
                        }
                    }
                    settings.completed.call(input);
                }

                function getPlaceholder(i){
                    if(i < settings.placeholder.length)
                        return settings.placeholder.charAt(i);
                    return settings.placeholder.charAt(0);
                }

                function seekNext(pos) {
                    while (++pos < len && !tests[pos]);
                    return pos;
                }

                function seekPrev(pos) {
                    while (--pos >= 0 && !tests[pos]);
                    return pos;
                }

                function shiftL(begin,end) {
                    var i,
                        j;

                    if (begin<0) {
                        return;
                    }

                    for (i = begin, j = seekNext(end); i < len; i++) {
                        if (tests[i]) {
                            if (j < len && tests[i].test(buffer[j])) {
                                buffer[i] = buffer[j];
                                buffer[j] = getPlaceholder(j);
                            } else {
                                break;
                            }

                            j = seekNext(j);
                        }
                    }
                    writeBuffer();
                    input.caret(Math.max(firstNonMaskPos, begin));
                }

                function shiftR(pos) {
                    var i,
                        c,
                        j,
                        t;

                    for (i = pos, c = getPlaceholder(pos); i < len; i++) {
                        if (tests[i]) {
                            j = seekNext(i);
                            t = buffer[i];
                            buffer[i] = c;
                            if (j < len && tests[j].test(t)) {
                                c = t;
                            } else {
                                break;
                            }
                        }
                    }
                }

                function androidInputEvent(e) {
                    var curVal = input.val();
                    var pos = input.caret();
                    if (oldVal && oldVal.length && oldVal.length > curVal.length ) {
                        checkVal(true);
                        while (pos.begin > 0 && !tests[pos.begin-1])
                            pos.begin--;
                        if (pos.begin === 0)
                        {
                            while (pos.begin < firstNonMaskPos && !tests[pos.begin])
                                pos.begin++;
                        }
                        input.caret(pos.begin,pos.begin);
                    } else {
                        var pos2 = checkVal(true);
                        var lastEnteredValue = curVal.charAt(pos.begin);
                        if (pos.begin < len){
                            if(!tests[pos.begin]){
                                pos.begin++;
                                if(tests[pos.begin].test(lastEnteredValue)){
                                    pos.begin++;
                                }
                            }else{
                                if(tests[pos.begin].test(lastEnteredValue)){
                                    pos.begin++;
                                }
                            }
                        }
                        input.caret(pos.begin,pos.begin);
                    }
                    tryFireCompleted();
                }


                function blurEvent(e) {
                    checkVal();

                    if (input.val() != focusText)
                        input.change();
                }

                function keydownEvent(e) {
                    if (input.prop("readonly")){
                        return;
                    }

                    var k = e.which || e.keyCode,
                        pos,
                        begin,
                        end;
                    oldVal = input.val();
                    if (k === 8 || k === 46 || (iPhone && k === 127)) {
                        pos = input.caret();
                        begin = pos.begin;
                        end = pos.end;

                        if (end - begin === 0) {
                            begin=k!==46?seekPrev(begin):(end=seekNext(begin-1));
                            end=k===46?seekNext(end):end;
                        }
                        clearBuffer(begin, end);
                        shiftL(begin, end - 1);

                        e.preventDefault();
                    } else if( k === 13 ) {
                        blurEvent.call(this, e);
                    } else if (k === 27) {
                        input.val(focusText);
                        input.caret(0, checkVal());
                        e.preventDefault();
                    }
                }

                function keypressEvent(e) {
                    if (input.prop("readonly")){
                        return;
                    }

                    var k = e.which || e.keyCode,
                        pos = input.caret(),
                        p,
                        c,
                        next;

                    if (e.ctrlKey || e.altKey || e.metaKey || k < 32) {
                        return;
                    } else if ( k && k !== 13 ) {
                        if (pos.end - pos.begin !== 0){
                            clearBuffer(pos.begin, pos.end);
                            shiftL(pos.begin, pos.end-1);
                        }

                        p = seekNext(pos.begin - 1);
                        if (p < len) {
                            c = String.fromCharCode(k);
                            if (tests[p].test(c)) {
                                shiftR(p);

                                buffer[p] = c;
                                writeBuffer();
                                next = seekNext(p);

                                if(android){
                                    var proxy = function() {
                                        $.proxy($.fn.caret,input,next)();
                                    };

                                    setTimeout(proxy,0);
                                }else{
                                    input.caret(next);
                                }
                                if(pos.begin <= lastRequiredNonMaskPos){
                                    tryFireCompleted();
                                }
                            }
                        }
                        e.preventDefault();
                    }
                }

                function clearBuffer(start, end) {
                    var i;
                    for (i = start; i < end && i < len; i++) {
                        if (tests[i]) {
                            buffer[i] = getPlaceholder(i);
                        }
                    }
                }

                function writeBuffer() { input.val(buffer.join('')); }

                function checkVal(allow) {
                    var test = input.val(),
                        lastMatch = -1,
                        i,
                        c,
                        pos;

                    for (i = 0, pos = 0; i < len; i++) {
                        if (tests[i]) {
                            buffer[i] = getPlaceholder(i);
                            while (pos++ < test.length) {
                                c = test.charAt(pos - 1);
                                if (tests[i].test(c)) {
                                    buffer[i] = c;
                                    lastMatch = i;
                                    break;
                                }
                            }
                            if (pos > test.length) {
                                clearBuffer(i + 1, len);
                                break;
                            }
                        } else {
                            if (buffer[i] === test.charAt(pos)) {
                                pos++;
                            }
                            if( i < partialPosition){
                                lastMatch = i;
                            }
                        }
                    }
                    if (allow) {
                        writeBuffer();
                    } else if (lastMatch + 1 < partialPosition) {
                        if (settings.autoclear || buffer.join('') === defaultBuffer) {
                            clearBuffer(0, len);
                        } else {
                            writeBuffer();
                        }
                    } else {
                        writeBuffer();
                        input.val(input.val().substring(0, lastMatch + 1));
                    }
                    return (partialPosition ? i : firstNonMaskPos);
                }

                input.data($.mask.dataName,function(){
                    return $.map(buffer, function(c, i) {
                        return tests[i]&&c!=getPlaceholder(i) ? c : null;
                    }).join('');
                });


                input
                    .one("unmask", function() {
                        input
                            .off(".mask")
                            .removeData($.mask.dataName);
                    })
                    .on("focus.mask", function() {
                        if (input.prop("readonly")){
                            return;
                        }

                        clearTimeout(caretTimeoutId);
                        var pos;

                        focusText = input.val();

                        pos = checkVal();

                        caretTimeoutId = setTimeout(function(){
                            if(input.get(0) !== document.activeElement){
                                return;
                            }
                            writeBuffer();
                            if (pos == mask.replace("?","").length) {
                                input.caret(0, pos);
                            } else {
                                input.caret(pos);
                            }
                        }, 10);
                    })
                    .on("blur.mask", blurEvent)
                    .on("keydown.mask", keydownEvent)
                    .on("keypress.mask", keypressEvent)
                    .on("input.mask paste.mask", function() {
                        if (input.prop("readonly")){
                            return;
                        }

                        setTimeout(function() {
                            var pos=checkVal(true);
                            input.caret(pos);
                            tryFireCompleted();
                        }, 0);
                    });
                if (chrome && android)
                {
                    input
                        .off('input.mask')
                        .on('input.mask', androidInputEvent);
                }
                checkVal();
            });
        }
    });
}));

$.fn.mytoggle = function () {
	var b = arguments;
	return this.each(function (i, el) {
		var a = function () {
			var c = 0;
			return function () {
				b[c++ % b.length].apply(el, arguments);
			};
		}();
		$(el).click(a);
	});
};

$(function() {
	$('.wr_btn_menu').mytoggle(function () {
		$('.menu').removeClass('hide-menu').addClass('show-menu');
		$('.btn-menu').find('.gr').addClass('close');
	}, function () {
		$('.menu').addClass('hide-menu').removeClass('show-menu');
		$('.btn-menu').find('.gr').removeClass('close');
	});

	$('.go_to').click(function () {
		var scroll_el = $(this).attr('href');
		if ($(scroll_el).length != 0) {
			$('html, body').animate({ scrollTop: $(scroll_el).offset().top - 0 }, 600);
		}
		return false;
	});

	$('.search_mobile').mytoggle(function() {
		$('.search_form').slideDown(100);
	}, function() {
		$('.search_form').slideUp(100);
	});

	$('.profile_mobile').click(function() {
		console.log($(this).hasClass('doLogin'));
		if($(this).hasClass('doLogin')) {
            $.fancybox.open($('#loginModal'));
		} else {
			location.href = $(this).attr('data-url');
		}
	});

	var photoSlider = $('.photo_slider');

	
	
	

	$('.wr_photo_slider .next-slide').click(function () {
		$(this).parent().find('.photo_slider').trigger('next.owl.carousel');
	});

	$('.wr_photo_slider .prev-slide').click(function () {
		$(this).parent().find('.photo_slider').trigger('prev.owl.carousel');
	});

	var singleSliderDragNo = $('.single_slider').hasClass('activeDrag');
	var singleSlider = $('.single_slider');
	singleSlider.owlCarousel({
		items: 1,
		lazyLoad: true,
		loop: false,
		autoplay: false,
		touchDrag: singleSliderDragNo,
        mouseDrag: singleSliderDragNo,
	});

	var singleListSlider = $('.single_list_slider');
	singleListSlider.owlCarousel({
		items: 5,
		margin: 10,
		lazyLoad: true,
		loop: false,
		autoplay: false,
		responsive: {
			1920: {
				items: 5
			},
			680: {
				items: 5
			},
			520: {
				items: 4
			},
			0: {
				items: 3
			}
		}
	});

	$('.wr_single_list_slider .next-slide').click(function () {
		singleListSlider.trigger('next.owl.carousel');
	});

	$('.wr_single_list_slider .prev-slide').click(function () {
		singleListSlider.trigger('prev.owl.carousel');
	});

	$('.close').click(function() {
		$.arcticmodal('close');
	});
	

	$(function(){
		$('.open_state a').each(function(){
			var location=window.location.href;
			var link=this.href;
			if(location==link){
				$(this).parent().addClass('open');
			}
		});
		$('.open_state a').on('click',function(event){});
		$('.open_state').on('click',function(e){
			var _self=$(this);
			$(this).find('ul').first().slideToggle(function(e){
				_self.toggleClass('open');
			});
		})
		$('open_state a').click(function(e){
			e.stopPropagation();
		})

	});
	
	
	var hContent = $('.content').height();
	$('.content').find('.right_line').height(hContent);

	$('.single_list_slider').find('.item').click(function() {
		var dataSlide = $(this).attr('data-slide');
		dataSlide = dataSlide - 1;
		$('.single_slider').trigger('to.owl.carousel', [dataSlide, 300]);
	});

	$('.sub_btn').click(function() {
		var quan = $(this).parent().find('.quan_prod').val();
		if (quan > 1) {
			quan--;
		}
		$(this).parent().find('.quan_prod').val(quan);
	});
	$('.add_btn').click(function() {
		var quan = $(this).parent().find('.quan_prod').val();
		quan++;
		$(this).parent().find('.quan_prod').val(quan);
	});

	$('.sendLkForm, .sendCartForm').click(function(e) {
		e.preventDefault();
		var status = true;

        $(this).parent().parent().find('.require').each(function(i, e) {
            if ($(e).val() == '') {
				$(e).css({border: "1px solid #7d0507"});
				$(e).parent().find('.error_field').show();
				status = false;
			} else {
				$(e).css({border: "1px solid #ccc"});
				$(e).parent().find('.error_field').hide();
			}
		});
		if (status) {
			$('#js-order-form').submit();
		}
	});

	$("[data-fancybox]").fancybox();


	$('.call_back').click(function(e) {
		e.preventDefault();
		$.fancybox.open($('#feedbackModal'));
	});

	$('._login').click(function(e) {
		e.preventDefault();
		$.fancybox.close( true );
		$.fancybox.open($('#loginModal'));
	});

	$('._reg').click(function(e) {
		e.preventDefault();
		$.fancybox.close( true );
		$.fancybox.open($('#regModal'));
	});

	$(document).on('click', '.close_modal', function() {
		$.fancybox.close( true );
	});

	$('.single_slider').find('.item').click(function() {
		$.fancybox.open($('.zoom_photo'));
	});

	$(document).find('.photo_slider').each(function(i, e) {
		var l = $(e).find('.item').length;
		if (l == 5) {
			$(e).parent().find('.next-slide, .prev-slide').hide();
		}
	});
	
	
	$('.reviews-carousel').slick({
		adaptiveHeight: true,
		arrows: true,
		appendArrows: '.reviews-carousel-arrows',
	});
});

function showResult() {
    $('#result_form').addClass('active');
    setTimeout(function () {
        $('#result_form').removeClass('active');
    }, 5000);
}

$( document ).ready(function() {


    var buyButton = $('#buy-button');
    var name = $('#name');
    var phone = $('#phone');

    buyButton.on("click", function (e) {
        console.log(phone.val().substr(phone.val().length - 9));
        if (name.val() != '' && phone.val() != '') {
            switch (phone.val().substr(phone.val().length - 9)) {
                case '111-11-11':
                case '222-22-22':
                case '333-33-33':
                case '444-44-44':
                case '555-55-55':
                case '666-66-66':
                case '777-77-77':
                case '888-88-88':
                case '999-99-99':
                case '000-00-00':
                    $('#result_form').html('Заполните поле "Телефон" действительным номером.');
                    showResult();
                    e.preventDefault();
                    return false;
            }

            sendAjaxForm('result_form', 'popup-form', '/lib/submit-loader/action_ajax_form.php');
            return false;
        } else {
            $('#result_form').html('Заполните все поля формы.');
            showResult();
        }
    });

    function sendAjaxForm(result_form, ajax_form, url) {
        $.ajax({
            url:     url,
            type:     "POST",
            dataType: "html",
            data: {
                name : name.val(),
                phone: phone.val(),
                title: $('#title-pop').text(),
                article: $('#article-pop').text(),
                price: $('#price-pop').text()
            },
            success: function(response) {
                $('#result_form').html('Ваш запрос отправлен успешно. Мы свяжемся с вами в ближайшее время');
                ym(52233223, 'reachGoal', 'leadklik');
            },
            error: function(response) {
                $('#result_form').html('Ошибка. Данные не отправлены.');
            },
            complete: function (response) {
                showResult();
            }
        });
    }

    $('.one-click-buy').on('click', function () {
    	$('#popup .title').text($(this).parent().find('.name_prod').text());
		
        $('#popup .article').text($(this).parent().find('.articul').text());
        $('#popup .price').text($(this).parent().find('.price').text());
		$('#popup').show();
    });
	
	$('.one-click-buy2').on('click', function () {
    	$('#popup .title').text($(this).parent().find('.name_prod').text());
		console.log($(this).parent().find('.name_prod').eq(0).text())
        $('#popup .article').text($(this).parent().find('.articul').text());
        $('#popup .price').text($(this).parent().find('.price').text());
		$('#popup').show();
    });

    $('#close-popup').on("click", closefunc);
    $('#bg-popup').on("click", closefunc);
    function closefunc(){
        $('#popup').hide();
    }

    phone.mask("+7(999) 999-99-99");
    $('#callbackform-phone').mask("+7(999) 999-99-99",{placeholder:"+7(___) ___-__-__"});
	$('#orderform-phone').mask("+7(999) 999-99-99",{placeholder:"+7(___) ___-__-__"});

	$('#js-order-form').on('submit', function (e) {
       var inputs = {
           //name: $('#orderform-name'),
           phone: $('#orderform-phone'),
           //address: $('#orderform-address')
       };

        for (var input in inputs) {
            $('span').remove('.notification');
            inputs[input].removeClass('invalid');
            if (inputs[input].val() == '') {
                inputs[input].addClass('invalid');
                $('#result_form').html('Заполните все обязательные поля оформления заказа.');
                showResult();
                e.preventDefault();
            }
        }

       $('#js-order-form').on('keyup', 'input', function () {
          if ($(this).val().replace(/[_-]/g, '').length != 0) {
              $(this).removeClass('invalid');
          } else {
              $(this).addClass('invalid');
          }
       });

       switch (inputs.phone.val().substr(inputs.phone.length - 10)) {
            case '111-11-11':
            case '222-22-22':
            case '333-33-33':
            case '444-44-44':
            case '555-55-55':
            case '666-66-66':
            case '777-77-77':
            case '888-88-88':
            case '999-99-99':
            case '000-00-00':
                inputs.phone.addClass('invalid');
                $('#result_form').html('Заполните поле "Телефон" действительным номером.');
                showResult();
                e.preventDefault();
       }




    });

    $('#js-callback-form').on("submit_success", function (e) {
        if ($('#callbackform-name').val() == '' || $('#callbackform-phone').val() == '') {
            $('#result_form').html('Заполните все поля формы.');
            showResult();
        }
        return false;
        e.preventDefault();
    });

    $('#callbackform-phone').on('keypress', function() {
        console.log($(this).val().substr($(this).val().length - 9));
        switch ($(this).val().substr($(this).val().length - 9)) {
            case '111-11-11':
            case '222-22-22':
            case '333-33-33':
            case '444-44-44':
            case '555-55-55':
            case '666-66-66':
            case '777-77-77':
            case '888-88-88':
            case '999-99-99':
            case '000-00-00':
                $('#result_form').html('Заполните поле "Телефон" действительным номером.');
                showResult();
                $('#js-callback-form button').attr("disabled", true);
                break;
            default:
                $('#js-callback-form button').attr("disabled", false);
        }
    });
    
    $('.radio-stars').on('click', 'label', function() {

		var rating = $(this).attr('data-rating');

		$('.radio-stars label').filter(function() {
			return $(this).attr("data-rating") > rating;
		}).stop().addClass('null');

		$('.radio-stars label').filter(function() {
			return $(this).attr("data-rating") <= rating;
		}).stop().removeClass('null');

	});

});
$('.photo_slider').each(function (index) {
		var drag_no = $(this).hasClass('activeDrag');
		var images = $(this).find('.item');
		
		
		images.each(function(img) {
			var item = $(this);
			var styleI = item.attr('style');
						
			setTimeout(function() {
				item.attr('style', '');
				item.attr('style', styleI);
			}, 1000);
		});
		
	    $(this).owlCarousel({
	        pagination: false,
			items: 1,
			lazyLoad: true,
			loop: true, 
			autoplay: false,
	        touchDrag: drag_no,
	        mouseDrag: drag_no,
	    });
});

$(document).ready(function(){ 

	var link1 = $('.menu-list__item--current.active a').attr('href');
	var link2 = document.location.pathname;
	if (link1 == link2) {
		$('.menu-list__item--current.active a').removeAttr("href").css("cursor","pointer");
	}

	width = $(window).width();	
	if (width <= 768) {	
		$('.mp_func').each(function(){
			 var hrf = $(this).attr('href');
			$(this).attr('href', hrf + '#mp');
		});
	}


	var tabsCount = $('.cart-tabs-content > div').length,
        currentTab = parseInt($('.cart-tabs-content > div.active').data('tab'));

	$('.cart-tabs-control').on('click', 'a', function () {

        if ($(this).hasClass('next')) {
            var errors = $('.cart-tab-content.active input:invalid').length;

            if (currentTab == 2) {
                errors = $('.cart-delivery-type:not(.disabled) input:invalid').length + $('.cart-delivery-type:not(.disabled) select:invalid').length;
            }

            if (errors > 0) {
                $('#result_form').html('Заполните все обязательные поля оформления заказа.');
                showResult();

                return false;
            }
        }

        $('.cart-tabs-control a').css({display: 'inline-block'});
        $('.cart-tabs-content > div').hide().removeClass('active');
        $('.cart-tabs li').removeClass('active');


        if ($(this).hasClass('next')) {
            currentTab++;
        } else {
            currentTab--;
        }

        $('.cart-tabs-content > div[data-tab="' + currentTab + '"]').show().addClass('active');
        $('.cart-tabs li[data-tab="' + currentTab + '"]').addClass('active');

        if (currentTab == tabsCount) {
            $('.cart-tabs-control .next').hide();
        }

        if (currentTab == 1) {
            $('.cart-tabs-control .back').hide();
        }

        return false;
    });

	function updateDeliveryInfo() {
        var region = $('#cart-region option:selected').text(),
            city = $('#cart-city option:selected').text(),
            pvz = $('#cart-pvz option:selected').text();

        $('#delivery_info').val(region + ' -- ' + city + ' -- ' + pvz);
    }

    function forEach(data, callback){
        for(var key in data){
            if(data.hasOwnProperty(key)){
                callback(key, data[key]);
            }
        }
    }


    $('#cart-region select').on('change', function () {
        var region = $(this).val(),
            csrf = $('#csrf_token').val();


        $('#cart-city').hide().find('select').empty();
        $('#cart-pvz').hide().find('select').empty();
        $('#cart-pvz-error').hide();
        $('#cart-loader').show();
        $('.cart-delivery-cdek').find('.address-field').remove();

        if (region == 0) {
            return false;
        }

        updateDeliveryInfo();

        $.ajax({
            url:     '/cart/getcities',
            type:     "POST",
            data: {
                'region': region,
                '_csrf': csrf,
            },
            success: function(response) {

                $('#cart-city').show();
                $('#cart-loader').hide();

                Object.entries(response).forEach(([key, city]) => {
                    $('#cart-city select').append('<option value="' + (key == 0 ? '' : key) + '">' + city + '</option>');
                });

            },
            error: function(response) {
                alert('Произошла ошибка. Попробуйте еще раз!');
            }
        });

    });

    $('#cart-city select').on('change', function () {
        var city = $(this).val(),
            csrf = $('#csrf_token').val();

        $('#cart-pvz').hide().find('select').empty();
        $('#cart-pvz-error').hide();
        $('#cart-loader').show();
        $('.cart-delivery-cdek').find('.address-field').remove();

        if (city == 0) {
            return false;
        }

        updateDeliveryInfo();

        $.ajax({
            url:     '/cart/getpvz',
            type:     "POST",
            data: {
                'city': city,
                '_csrf': csrf,
            },
            success: function(response) {
                $('#cart-loader').hide();

                if (response.length == 1) {
                    $('#cart-pvz-error').show();
                }
                else {
                    $('#cart-pvz').show();

                    Object.entries(response).forEach(([key, pvz]) => {
                        $('#cart-pvz select').append('<option value="' + (key == 0 ? '' : key) + '">' + pvz + '</option>');
                    });
                }

            },
            error: function(response) {
                alert('Произошла ошибка. Попробуйте еще раз!');
            }
        });

    });

    $('#cart-pvz select').on('change', function () {
        updateDeliveryInfo();

        var pvz = $(this).val();

        if (pvz == 1) {
            var newAdress = $('.address-field').clone();
            $('.cart-delivery-cdek').append(newAdress);
        } else {
            $('.cart-delivery-cdek').find('.address-field').remove();
        }

    });


    $('.cart-delivery-types').on('change', 'input[type="radio"]', function () {
        var parent = $(this).parents('.cart-delivery-type');

        $('.cart-delivery-type').addClass('disabled');

        parent.removeClass('disabled');

        if (!parent.hasClass('cart-delivery-cdek')) {
            $('.cart-delivery-cdek input[type="text"]').prop('disabled', true);
        } else {
            $('.cart-delivery-cdek input[type="text"]').prop('disabled', false);
        }
    });

    $('.cart-pays-types').on('change', 'input[type="radio"]', function () {
        var payType = parseInt($(this).val()),
            discountPrice = $('.total_sum_discount'),
            normalPrice = $('.total_sum_normal');

        if (payType == 5) { // онлайн оплата
            discountPrice.show();
            normalPrice.addClass('remove');
        } else {
            discountPrice.hide();
            normalPrice.removeClass('remove');
        }
    });
	
});




}
/*
     FILE ARCHIVED ON 03:41:46 Mar 15, 2022 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 12:40:19 Jun 05, 2022.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
/*
playback timings (ms):
  captures_list: 104.204
  exclusion.robots: 0.134
  exclusion.robots.policy: 0.123
  cdx.remote: 0.084
  esindex: 0.012
  LoadShardBlock: 61.18 (3)
  PetaboxLoader3.datanode: 67.338 (5)
  CDXLines.iter: 19.362 (3)
  load_resource: 77.564
  PetaboxLoader3.resolve: 27.904
  loaddict: 36.714
*/